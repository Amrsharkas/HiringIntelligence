The current route /api/ai/generate-description is returning a 500 Internal Server Error. I want to generate job descriptions using OpenAI based on a job title input. Here's what to do:

🧠 Backend (Node.js with Express)
Ensure OpenAI API key is working:

Add this at the top of your server file:

js
Copy
Edit
import dotenv from 'dotenv';
dotenv.config();
In .env file:

ini
Copy
Edit
OPENAI_API_KEY=sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Fix or add the route in your routes/ai.js or server.js:

js
Copy
Edit
import express from 'express';
import fetch from 'node-fetch';

const router = express.Router();

router.post('/api/ai/generate-description', async (req, res) => {
  const { title } = req.body;

  if (!title) {
    return res.status(400).json({ error: 'Missing job title' });
  }

  try {
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: [
          { role: 'system', content: 'You write job descriptions.' },
          { role: 'user', content: `Write a concise and professional job description for a ${title}.` }
        ],
        temperature: 0.7,
      }),
    });

    const data = await response.json();

    if (!data.choices || data.choices.length === 0) {
      console.error('OpenAI returned no choices:', data);
      return res.status(500).json({ error: 'No description generated' });
    }

    res.json({ description: data.choices[0].message.content });
  } catch (err) {
    console.error('OpenAI error:', err);
    res.status(500).json({ error: 'Failed to fetch from OpenAI' });
  }
});

export default router;
Mount the router:

In your main app.js or server.js:

js
Copy
Edit
import aiRoutes from './routes/ai.js'; // adjust if needed
app.use(express.json());
app.use(aiRoutes);
🖥️ Frontend
Update the frontend call:

ts
Copy
Edit
const generateDescription = async (title) => {
  const res = await fetch('/api/ai/generate-description', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ title }),
  });
  const data = await res.json();
  return data.description;
};
Log title before the request to ensure it’s not empty.

🧪 Testing
Log req.body and the OpenAI response to catch any undefined/null values.

If the frontend is hosted separately, use full domain:
https://your-backend-url.replit.dev/api/ai/generate-description

✅ Once done, restart the server and test again.

