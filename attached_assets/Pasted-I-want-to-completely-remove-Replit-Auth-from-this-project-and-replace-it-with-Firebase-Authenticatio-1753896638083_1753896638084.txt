I want to completely remove Replit Auth from this project and replace it with Firebase Authentication.
Replit Auth has caused issues with session handling and redirects. I want a clean Firebase integration that works with both the React (Wouter) frontend and the Express backend.

Please do the following:

🔨 1. Remove Replit Auth
Remove all Replit Auth code, including:

passport setup

server/replitAuth.ts

Routes like /api/login, /api/callback, /api/logout

isAuthenticated middleware (replace later with Firebase logic)

🔐 2. Integrate Firebase Authentication
Use npm to install Firebase:

bash
Copy
Edit
npm install firebase
Use this config:

ts
Copy
Edit
const firebaseConfig = {
  apiKey: "AIzaSyAQxw4NLTDlKzmR2SGRIPZ1qWniXnXYumY",
  authDomain: "plato-244d4.firebaseapp.com",
  projectId: "plato-244d4",
  storageBucket: "plato-244d4.firebasestorage.app",
  messagingSenderId: "324792740330",
  appId: "1:324792740330:web:a689e8cd84d64e6b88aa93",
  measurementId: "G-QY3LZMQBS0"
};
Enable and support both:

Email/Password sign-in

Google Sign-In

🔧 If Google Sign-In fails due to missing OAuth config, prompt me to finish it in Google Cloud Console.

🌐 3. Add Authorized Domains
Ensure the following are added to Firebase Console → Authentication → Settings → Authorized Domains:

ccdbe808-70a7-48fd-a264-894b316c5801-00-2c1vcgm103e02.riker.replit.dev

platohiring.com

🔁 4. Routing & Redirects
After successful login/signup, redirect to /

Frontend handles post-auth routing:

If authenticated → show EmployerDashboard

If not → show Landing Page

🔐 5. Route Protection
Protect /dashboard and any authenticated pages both client- and server-side.

Redirect unauthenticated users to /

For React (Wouter):

Wrap protected routes with a Firebase Auth check.

For Express:

Replace old isAuthenticated middleware with Firebase token verification:

Extract idToken from frontend

Use firebase-admin to verify token server-side

💾 6. Store User Info in Firestore
On signup, write the following to Firestore:

ts
Copy
Edit
{
  uid,
  email,
  displayName,
  createdAt: Timestamp.now()
}
🧠 7. Session Handling
Ensure sessions persist across page reloads.

Support automatic login state restoration via Firebase Auth.

✨ 8. Guide Me Where Needed
If you need service account credentials for firebase-admin, ask me.

If something breaks during removal of Replit Auth, confirm before deleting.